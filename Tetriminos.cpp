#include "Tetriminos.h"

// Kind | Rotation | Horizontal | Vertical
char tetriminos[7][4][5][5] = {
    // O
    {{{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}}},

    // I
    {{{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 1, 1},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 1, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {1, 1, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 1, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}}},
    // L
    {{{0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 1, 0, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 1, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 1, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}}},
    // J
    {{{0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 0, 0},
      {0, 1, 1, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 1, 0, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 0, 1, 0},
      {0, 0, 0, 0, 0}}},
    // Z
    {{{0, 0, 0, 0, 0},
      {0, 0, 0, 1, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 0, 0},
      {0, 0, 1, 1, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 1, 2, 0, 0},
      {0, 1, 0, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 1, 1, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}}},
    // S
    {{{0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 0, 1, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 1, 1, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 1, 0, 0, 0},
      {0, 1, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 1, 1, 0},
      {0, 1, 2, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}}},
    // T
    {{{0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 2, 1, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 1, 2, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 0, 0, 0, 0}},
     {{0, 0, 0, 0, 0},
      {0, 0, 1, 0, 0},
      {0, 1, 2, 1, 0},
      {0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0}}}};

// Kind | Rotation | Position
int tetriminosInitialPosition[7][4][2] = {

    {// O
     {-2, -3},
     {-2, -3},
     {-2, -3},
     {-2, -3}},

    {// I
     {-2, -2},
     {-2, -3},
     {-2, -2},
     {-2, -3}},

    {// L
     {-2, -3},
     {-2, -3},
     {-2, -3},
     {-2, -2}},

    {// J
     {-2, -3},
     {-2, -2},
     {-2, -3},
     {-2, -3}},

    {// Z
     {-2, -3},
     {-2, -3},
     {-2, -3},
     {-2, -2}},

    {// S
     {-2, -3},
     {-2, -3},
     {-2, -3},
     {-2, -2}},

    {// T
     {-2, -3},
     {-2, -3},
     {-2, -3},
     {-2, -2}},
};

int Tetriminos::getBlockType(int tetrimino, int rotation, int x, int y) {
  return tetriminos[tetrimino][rotation][x][y];
}

int Tetriminos::getXInitialPosition(int tetrimino, int rotation) {
  return tetriminosInitialPosition[tetrimino][rotation][0];
}

int Tetriminos::getYInitialPosition(int tetrimino, int rotation) {
  return tetriminosInitialPosition[tetrimino][rotation][1];
}
